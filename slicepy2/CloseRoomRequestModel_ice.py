# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `CloseRoomRequestModel.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmconfctlserver
_M_com.fastonz.fmconfctlserver = Ice.openModule('com.fastonz.fmconfctlserver')
__name__ = 'com.fastonz.fmconfctlserver'

# Start of module com.fastonz.fmconfctlserver.model
_M_com.fastonz.fmconfctlserver.model = Ice.openModule('com.fastonz.fmconfctlserver.model')
__name__ = 'com.fastonz.fmconfctlserver.model'

if 'CloseRoomRequestModel' not in _M_com.fastonz.fmconfctlserver.model.__dict__:
    _M_com.fastonz.fmconfctlserver.model.CloseRoomRequestModel = Ice.createTempClass()
    class CloseRoomRequestModel(object):
        def __init__(self, roomID=0, reason=0, description=''):
            self.roomID = roomID
            self.reason = reason
            self.description = description

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.roomID)
            _h = 5 * _h + Ice.getHash(self.reason)
            _h = 5 * _h + Ice.getHash(self.description)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.fastonz.fmconfctlserver.model.CloseRoomRequestModel):
                return NotImplemented
            else:
                if self.roomID is None or other.roomID is None:
                    if self.roomID != other.roomID:
                        return (-1 if self.roomID is None else 1)
                else:
                    if self.roomID < other.roomID:
                        return -1
                    elif self.roomID > other.roomID:
                        return 1
                if self.reason is None or other.reason is None:
                    if self.reason != other.reason:
                        return (-1 if self.reason is None else 1)
                else:
                    if self.reason < other.reason:
                        return -1
                    elif self.reason > other.reason:
                        return 1
                if self.description is None or other.description is None:
                    if self.description != other.description:
                        return (-1 if self.description is None else 1)
                else:
                    if self.description < other.description:
                        return -1
                    elif self.description > other.description:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmconfctlserver.model._t_CloseRoomRequestModel)

        __repr__ = __str__

    _M_com.fastonz.fmconfctlserver.model._t_CloseRoomRequestModel = IcePy.defineStruct('::com::fastonz::fmconfctlserver::model::CloseRoomRequestModel', CloseRoomRequestModel, (), (
        ('roomID', (), IcePy._t_int),
        ('reason', (), IcePy._t_int),
        ('description', (), IcePy._t_string)
    ))

    _M_com.fastonz.fmconfctlserver.model.CloseRoomRequestModel = CloseRoomRequestModel
    del CloseRoomRequestModel

# End of module com.fastonz.fmconfctlserver.model

__name__ = 'com.fastonz.fmconfctlserver'

# End of module com.fastonz.fmconfctlserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
