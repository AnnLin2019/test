# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `DevFileModel.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmserver
_M_com.fastonz.fmserver = Ice.openModule('com.fastonz.fmserver')
__name__ = 'com.fastonz.fmserver'

# Start of module com.fastonz.fmserver.model
_M_com.fastonz.fmserver.model = Ice.openModule('com.fastonz.fmserver.model')
__name__ = 'com.fastonz.fmserver.model'

if 'DevFileModel' not in _M_com.fastonz.fmserver.model.__dict__:
    _M_com.fastonz.fmserver.model.DevFileModel = Ice.createTempClass()
    class DevFileModel(object):
        def __init__(self, docID='', parentID='', docName='', docType=0, fileName='', fileExt='', fileSize=0, checkCode=0, creatorID=0, fileWidth=0, fileHeight=0, subFileCount=0, fileUrl='', fileServiceID=0, serviceAppID=0, serviceAddrs='', RoomID=0):
            self.docID = docID
            self.parentID = parentID
            self.docName = docName
            self.docType = docType
            self.fileName = fileName
            self.fileExt = fileExt
            self.fileSize = fileSize
            self.checkCode = checkCode
            self.creatorID = creatorID
            self.fileWidth = fileWidth
            self.fileHeight = fileHeight
            self.subFileCount = subFileCount
            self.fileUrl = fileUrl
            self.fileServiceID = fileServiceID
            self.serviceAppID = serviceAppID
            self.serviceAddrs = serviceAddrs
            self.RoomID = RoomID

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.docID)
            _h = 5 * _h + Ice.getHash(self.parentID)
            _h = 5 * _h + Ice.getHash(self.docName)
            _h = 5 * _h + Ice.getHash(self.docType)
            _h = 5 * _h + Ice.getHash(self.fileName)
            _h = 5 * _h + Ice.getHash(self.fileExt)
            _h = 5 * _h + Ice.getHash(self.fileSize)
            _h = 5 * _h + Ice.getHash(self.checkCode)
            _h = 5 * _h + Ice.getHash(self.creatorID)
            _h = 5 * _h + Ice.getHash(self.fileWidth)
            _h = 5 * _h + Ice.getHash(self.fileHeight)
            _h = 5 * _h + Ice.getHash(self.subFileCount)
            _h = 5 * _h + Ice.getHash(self.fileUrl)
            _h = 5 * _h + Ice.getHash(self.fileServiceID)
            _h = 5 * _h + Ice.getHash(self.serviceAppID)
            _h = 5 * _h + Ice.getHash(self.serviceAddrs)
            _h = 5 * _h + Ice.getHash(self.RoomID)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.fastonz.fmserver.model.DevFileModel):
                return NotImplemented
            else:
                if self.docID is None or other.docID is None:
                    if self.docID != other.docID:
                        return (-1 if self.docID is None else 1)
                else:
                    if self.docID < other.docID:
                        return -1
                    elif self.docID > other.docID:
                        return 1
                if self.parentID is None or other.parentID is None:
                    if self.parentID != other.parentID:
                        return (-1 if self.parentID is None else 1)
                else:
                    if self.parentID < other.parentID:
                        return -1
                    elif self.parentID > other.parentID:
                        return 1
                if self.docName is None or other.docName is None:
                    if self.docName != other.docName:
                        return (-1 if self.docName is None else 1)
                else:
                    if self.docName < other.docName:
                        return -1
                    elif self.docName > other.docName:
                        return 1
                if self.docType is None or other.docType is None:
                    if self.docType != other.docType:
                        return (-1 if self.docType is None else 1)
                else:
                    if self.docType < other.docType:
                        return -1
                    elif self.docType > other.docType:
                        return 1
                if self.fileName is None or other.fileName is None:
                    if self.fileName != other.fileName:
                        return (-1 if self.fileName is None else 1)
                else:
                    if self.fileName < other.fileName:
                        return -1
                    elif self.fileName > other.fileName:
                        return 1
                if self.fileExt is None or other.fileExt is None:
                    if self.fileExt != other.fileExt:
                        return (-1 if self.fileExt is None else 1)
                else:
                    if self.fileExt < other.fileExt:
                        return -1
                    elif self.fileExt > other.fileExt:
                        return 1
                if self.fileSize is None or other.fileSize is None:
                    if self.fileSize != other.fileSize:
                        return (-1 if self.fileSize is None else 1)
                else:
                    if self.fileSize < other.fileSize:
                        return -1
                    elif self.fileSize > other.fileSize:
                        return 1
                if self.checkCode is None or other.checkCode is None:
                    if self.checkCode != other.checkCode:
                        return (-1 if self.checkCode is None else 1)
                else:
                    if self.checkCode < other.checkCode:
                        return -1
                    elif self.checkCode > other.checkCode:
                        return 1
                if self.creatorID is None or other.creatorID is None:
                    if self.creatorID != other.creatorID:
                        return (-1 if self.creatorID is None else 1)
                else:
                    if self.creatorID < other.creatorID:
                        return -1
                    elif self.creatorID > other.creatorID:
                        return 1
                if self.fileWidth is None or other.fileWidth is None:
                    if self.fileWidth != other.fileWidth:
                        return (-1 if self.fileWidth is None else 1)
                else:
                    if self.fileWidth < other.fileWidth:
                        return -1
                    elif self.fileWidth > other.fileWidth:
                        return 1
                if self.fileHeight is None or other.fileHeight is None:
                    if self.fileHeight != other.fileHeight:
                        return (-1 if self.fileHeight is None else 1)
                else:
                    if self.fileHeight < other.fileHeight:
                        return -1
                    elif self.fileHeight > other.fileHeight:
                        return 1
                if self.subFileCount is None or other.subFileCount is None:
                    if self.subFileCount != other.subFileCount:
                        return (-1 if self.subFileCount is None else 1)
                else:
                    if self.subFileCount < other.subFileCount:
                        return -1
                    elif self.subFileCount > other.subFileCount:
                        return 1
                if self.fileUrl is None or other.fileUrl is None:
                    if self.fileUrl != other.fileUrl:
                        return (-1 if self.fileUrl is None else 1)
                else:
                    if self.fileUrl < other.fileUrl:
                        return -1
                    elif self.fileUrl > other.fileUrl:
                        return 1
                if self.fileServiceID is None or other.fileServiceID is None:
                    if self.fileServiceID != other.fileServiceID:
                        return (-1 if self.fileServiceID is None else 1)
                else:
                    if self.fileServiceID < other.fileServiceID:
                        return -1
                    elif self.fileServiceID > other.fileServiceID:
                        return 1
                if self.serviceAppID is None or other.serviceAppID is None:
                    if self.serviceAppID != other.serviceAppID:
                        return (-1 if self.serviceAppID is None else 1)
                else:
                    if self.serviceAppID < other.serviceAppID:
                        return -1
                    elif self.serviceAppID > other.serviceAppID:
                        return 1
                if self.serviceAddrs is None or other.serviceAddrs is None:
                    if self.serviceAddrs != other.serviceAddrs:
                        return (-1 if self.serviceAddrs is None else 1)
                else:
                    if self.serviceAddrs < other.serviceAddrs:
                        return -1
                    elif self.serviceAddrs > other.serviceAddrs:
                        return 1
                if self.RoomID is None or other.RoomID is None:
                    if self.RoomID != other.RoomID:
                        return (-1 if self.RoomID is None else 1)
                else:
                    if self.RoomID < other.RoomID:
                        return -1
                    elif self.RoomID > other.RoomID:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmserver.model._t_DevFileModel)

        __repr__ = __str__

    _M_com.fastonz.fmserver.model._t_DevFileModel = IcePy.defineStruct('::com::fastonz::fmserver::model::DevFileModel', DevFileModel, (), (
        ('docID', (), IcePy._t_string),
        ('parentID', (), IcePy._t_string),
        ('docName', (), IcePy._t_string),
        ('docType', (), IcePy._t_int),
        ('fileName', (), IcePy._t_string),
        ('fileExt', (), IcePy._t_string),
        ('fileSize', (), IcePy._t_int),
        ('checkCode', (), IcePy._t_int),
        ('creatorID', (), IcePy._t_int),
        ('fileWidth', (), IcePy._t_int),
        ('fileHeight', (), IcePy._t_int),
        ('subFileCount', (), IcePy._t_int),
        ('fileUrl', (), IcePy._t_string),
        ('fileServiceID', (), IcePy._t_int),
        ('serviceAppID', (), IcePy._t_int),
        ('serviceAddrs', (), IcePy._t_string),
        ('RoomID', (), IcePy._t_int)
    ))

    _M_com.fastonz.fmserver.model.DevFileModel = DevFileModel
    del DevFileModel

# End of module com.fastonz.fmserver.model

__name__ = 'com.fastonz.fmserver'

# End of module com.fastonz.fmserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
