# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `DeviceService.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
import PhoneGatewayModel_ice
import DevRegisterRequestModel_ice
import DevRegisterResponseModel_ice
import DeviceModel_ice
import FrontStartModel_ice
import RegisterServiceModel_ice
import UpdateDeviceModel_ice
import AppServiceModel_ice
import DevFileModel_ice
import DevVerifyCodeModel_ice
import NodeModel_ice
import ServiceModel_ice
import LicenseModel_ice
import AppServiceBandwidthModel_ice
import DistributePhoneGwRequestModel_ice
import DistributePhoneGwResponseModel_ice
import H323GatewayModel_ice
import GatewayStatusModel_ice

# Included module com
_M_com = Ice.openModule('com')

# Included module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')

# Included module com.fastonz.fmserver
_M_com.fastonz.fmserver = Ice.openModule('com.fastonz.fmserver')

# Included module com.fastonz.fmserver.model
_M_com.fastonz.fmserver.model = Ice.openModule('com.fastonz.fmserver.model')

# Start of module com
__name__ = 'com'

# Start of module com.fastonz
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmserver
__name__ = 'com.fastonz.fmserver'

# Start of module com.fastonz.fmserver.deviceMgr
_M_com.fastonz.fmserver.deviceMgr = Ice.openModule('com.fastonz.fmserver.deviceMgr')
__name__ = 'com.fastonz.fmserver.deviceMgr'

if '_t_PhoneGatewayList' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr._t_PhoneGatewayList = IcePy.defineSequence('::com::fastonz::fmserver::deviceMgr::PhoneGatewayList', (), _M_com.fastonz.fmserver.model._t_PhoneGatewayModel)

if '_t_DeviceList' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr._t_DeviceList = IcePy.defineSequence('::com::fastonz::fmserver::deviceMgr::DeviceList', (), _M_com.fastonz.fmserver.model._t_DeviceModel)

if '_t_AppServiceList' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr._t_AppServiceList = IcePy.defineSequence('::com::fastonz::fmserver::deviceMgr::AppServiceList', (), _M_com.fastonz.fmserver.model._t_AppServiceModel)

if '_t_DevFileList' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr._t_DevFileList = IcePy.defineSequence('::com::fastonz::fmserver::deviceMgr::DevFileList', (), _M_com.fastonz.fmserver.model._t_DevFileModel)

if '_t_NodeList' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr._t_NodeList = IcePy.defineSequence('::com::fastonz::fmserver::deviceMgr::NodeList', (), _M_com.fastonz.fmserver.model._t_NodeModel)

if '_t_SubNodeList' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr._t_SubNodeList = IcePy.defineSequence('::com::fastonz::fmserver::deviceMgr::SubNodeList', (), _M_com.fastonz.fmserver.model._t_SubNodeModel)

if '_t_ServiceList' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr._t_ServiceList = IcePy.defineSequence('::com::fastonz::fmserver::deviceMgr::ServiceList', (), _M_com.fastonz.fmserver.model._t_ServiceModel)

if '_t_AppServiceBandwidthList' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr._t_AppServiceBandwidthList = IcePy.defineSequence('::com::fastonz::fmserver::deviceMgr::AppServiceBandwidthList', (), _M_com.fastonz.fmserver.model._t_AppServiceBandwidthModel)

if '_t_H323GatewayList' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr._t_H323GatewayList = IcePy.defineSequence('::com::fastonz::fmserver::deviceMgr::H323GatewayList', (), _M_com.fastonz.fmserver.model._t_H323GatewayModel)

if '_t_NumberList' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr._t_NumberList = IcePy.defineSequence('::com::fastonz::fmserver::deviceMgr::NumberList', (), IcePy._t_string)

if '_t_GatewayStatusList' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr._t_GatewayStatusList = IcePy.defineSequence('::com::fastonz::fmserver::deviceMgr::GatewayStatusList', (), _M_com.fastonz.fmserver.model._t_GatewayStatusModel)

_M_com.fastonz.fmserver.deviceMgr._t_DeviceService = IcePy.defineValue('::com::fastonz::fmserver::deviceMgr::DeviceService', Ice.Value, -1, (), False, True, None, ())

if 'DeviceServicePrx' not in _M_com.fastonz.fmserver.deviceMgr.__dict__:
    _M_com.fastonz.fmserver.deviceMgr.DeviceServicePrx = Ice.createTempClass()
    class DeviceServicePrx(Ice.ObjectPrx):

        def GetAllPhoneGwInfo(self, userID, serviceAppID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAllPhoneGwInfo.invoke(self, ((userID, serviceAppID), context))

        def GetAllPhoneGwInfoAsync(self, userID, serviceAppID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAllPhoneGwInfo.invokeAsync(self, ((userID, serviceAppID), context))

        def begin_GetAllPhoneGwInfo(self, userID, serviceAppID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAllPhoneGwInfo.begin(self, ((userID, serviceAppID), _response, _ex, _sent, context))

        def end_GetAllPhoneGwInfo(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAllPhoneGwInfo.end(self, _r)

        def DevRegister(self, requestModel, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevRegister.invoke(self, ((requestModel, ), context))

        def DevRegisterAsync(self, requestModel, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevRegister.invokeAsync(self, ((requestModel, ), context))

        def begin_DevRegister(self, requestModel, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevRegister.begin(self, ((requestModel, ), _response, _ex, _sent, context))

        def end_DevRegister(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevRegister.end(self, _r)

        def FrontNodeRegister(self, nodeID, nodeCheckCode, subNodeAddr, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontNodeRegister.invoke(self, ((nodeID, nodeCheckCode, subNodeAddr), context))

        def FrontNodeRegisterAsync(self, nodeID, nodeCheckCode, subNodeAddr, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontNodeRegister.invokeAsync(self, ((nodeID, nodeCheckCode, subNodeAddr), context))

        def begin_FrontNodeRegister(self, nodeID, nodeCheckCode, subNodeAddr, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontNodeRegister.begin(self, ((nodeID, nodeCheckCode, subNodeAddr), _response, _ex, _sent, context))

        def end_FrontNodeRegister(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontNodeRegister.end(self, _r)

        def CheckDevList(self, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_CheckDevList.invoke(self, ((), context))

        def CheckDevListAsync(self, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_CheckDevList.invokeAsync(self, ((), context))

        def begin_CheckDevList(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_CheckDevList.begin(self, ((), _response, _ex, _sent, context))

        def end_CheckDevList(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_CheckDevList.end(self, _r)

        def FrontStart(self, nodeAddr, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontStart.invoke(self, ((nodeAddr, ), context))

        def FrontStartAsync(self, nodeAddr, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontStart.invokeAsync(self, ((nodeAddr, ), context))

        def begin_FrontStart(self, nodeAddr, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontStart.begin(self, ((nodeAddr, ), _response, _ex, _sent, context))

        def end_FrontStart(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontStart.end(self, _r)

        def RegisterService(self, deviceID, srvAppID, srvName, srvAddr, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_RegisterService.invoke(self, ((deviceID, srvAppID, srvName, srvAddr), context))

        def RegisterServiceAsync(self, deviceID, srvAppID, srvName, srvAddr, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_RegisterService.invokeAsync(self, ((deviceID, srvAppID, srvName, srvAddr), context))

        def begin_RegisterService(self, deviceID, srvAppID, srvName, srvAddr, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_RegisterService.begin(self, ((deviceID, srvAppID, srvName, srvAddr), _response, _ex, _sent, context))

        def end_RegisterService(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_RegisterService.end(self, _r)

        def DevUnRegister(self, deviceID, verifyCode, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevUnRegister.invoke(self, ((deviceID, verifyCode), context))

        def DevUnRegisterAsync(self, deviceID, verifyCode, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevUnRegister.invokeAsync(self, ((deviceID, verifyCode), context))

        def begin_DevUnRegister(self, deviceID, verifyCode, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevUnRegister.begin(self, ((deviceID, verifyCode), _response, _ex, _sent, context))

        def end_DevUnRegister(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevUnRegister.end(self, _r)

        def DevUpdate(self, requestModel, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevUpdate.invoke(self, ((requestModel, ), context))

        def DevUpdateAsync(self, requestModel, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevUpdate.invokeAsync(self, ((requestModel, ), context))

        def begin_DevUpdate(self, requestModel, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevUpdate.begin(self, ((requestModel, ), _response, _ex, _sent, context))

        def end_DevUpdate(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DevUpdate.end(self, _r)

        def FrontNodeUnregister(self, status, nodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontNodeUnregister.invoke(self, ((status, nodeID), context))

        def FrontNodeUnregisterAsync(self, status, nodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontNodeUnregister.invokeAsync(self, ((status, nodeID), context))

        def begin_FrontNodeUnregister(self, status, nodeID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontNodeUnregister.begin(self, ((status, nodeID), _response, _ex, _sent, context))

        def end_FrontNodeUnregister(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontNodeUnregister.end(self, _r)

        def GetAppSrvList(self, appID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAppSrvList.invoke(self, ((appID, ), context))

        def GetAppSrvListAsync(self, appID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAppSrvList.invokeAsync(self, ((appID, ), context))

        def begin_GetAppSrvList(self, appID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAppSrvList.begin(self, ((appID, ), _response, _ex, _sent, context))

        def end_GetAppSrvList(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAppSrvList.end(self, _r)

        def GetDevFileList(self, deviceID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetDevFileList.invoke(self, ((deviceID, ), context))

        def GetDevFileListAsync(self, deviceID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetDevFileList.invokeAsync(self, ((deviceID, ), context))

        def begin_GetDevFileList(self, deviceID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetDevFileList.begin(self, ((deviceID, ), _response, _ex, _sent, context))

        def end_GetDevFileList(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetDevFileList.end(self, _r)

        def GetDevVerifyCode(self, devID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetDevVerifyCode.invoke(self, ((devID, ), context))

        def GetDevVerifyCodeAsync(self, devID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetDevVerifyCode.invokeAsync(self, ((devID, ), context))

        def begin_GetDevVerifyCode(self, devID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetDevVerifyCode.begin(self, ((devID, ), _response, _ex, _sent, context))

        def end_GetDevVerifyCode(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetDevVerifyCode.end(self, _r)

        def GetNodeList(self, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetNodeList.invoke(self, ((), context))

        def GetNodeListAsync(self, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetNodeList.invokeAsync(self, ((), context))

        def begin_GetNodeList(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetNodeList.begin(self, ((), _response, _ex, _sent, context))

        def end_GetNodeList(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetNodeList.end(self, _r)

        def GetSubNodeList(self, parentNodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetSubNodeList.invoke(self, ((parentNodeID, ), context))

        def GetSubNodeListAsync(self, parentNodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetSubNodeList.invokeAsync(self, ((parentNodeID, ), context))

        def begin_GetSubNodeList(self, parentNodeID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetSubNodeList.begin(self, ((parentNodeID, ), _response, _ex, _sent, context))

        def end_GetSubNodeList(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetSubNodeList.end(self, _r)

        def ServiceUnregister(self, serviceID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_ServiceUnregister.invoke(self, ((serviceID, ), context))

        def ServiceUnregisterAsync(self, serviceID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_ServiceUnregister.invokeAsync(self, ((serviceID, ), context))

        def begin_ServiceUnregister(self, serviceID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_ServiceUnregister.begin(self, ((serviceID, ), _response, _ex, _sent, context))

        def end_ServiceUnregister(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_ServiceUnregister.end(self, _r)

        def SetNodeStatus(self, status, nodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_SetNodeStatus.invoke(self, ((status, nodeID), context))

        def SetNodeStatusAsync(self, status, nodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_SetNodeStatus.invokeAsync(self, ((status, nodeID), context))

        def begin_SetNodeStatus(self, status, nodeID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_SetNodeStatus.begin(self, ((status, nodeID), _response, _ex, _sent, context))

        def end_SetNodeStatus(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_SetNodeStatus.end(self, _r)

        def StartLocalNode(self, nodeMainAddr, nodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_StartLocalNode.invoke(self, ((nodeMainAddr, nodeID), context))

        def StartLocalNodeAsync(self, nodeMainAddr, nodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_StartLocalNode.invokeAsync(self, ((nodeMainAddr, nodeID), context))

        def begin_StartLocalNode(self, nodeMainAddr, nodeID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_StartLocalNode.begin(self, ((nodeMainAddr, nodeID), _response, _ex, _sent, context))

        def end_StartLocalNode(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_StartLocalNode.end(self, _r)

        def StopLocalNode(self, nodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_StopLocalNode.invoke(self, ((nodeID, ), context))

        def StopLocalNodeAsync(self, nodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_StopLocalNode.invokeAsync(self, ((nodeID, ), context))

        def begin_StopLocalNode(self, nodeID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_StopLocalNode.begin(self, ((nodeID, ), _response, _ex, _sent, context))

        def end_StopLocalNode(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_StopLocalNode.end(self, _r)

        def FrontGetParentNodeInfo(self, nodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontGetParentNodeInfo.invoke(self, ((nodeID, ), context))

        def FrontGetParentNodeInfoAsync(self, nodeID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontGetParentNodeInfo.invokeAsync(self, ((nodeID, ), context))

        def begin_FrontGetParentNodeInfo(self, nodeID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontGetParentNodeInfo.begin(self, ((nodeID, ), _response, _ex, _sent, context))

        def end_FrontGetParentNodeInfo(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontGetParentNodeInfo.end(self, _r)

        def GetServiceList(self, devID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetServiceList.invoke(self, ((devID, ), context))

        def GetServiceListAsync(self, devID, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetServiceList.invokeAsync(self, ((devID, ), context))

        def begin_GetServiceList(self, devID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetServiceList.begin(self, ((devID, ), _response, _ex, _sent, context))

        def end_GetServiceList(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetServiceList.end(self, _r)

        def UpdateService(self, serviceID, status, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_UpdateService.invoke(self, ((serviceID, status), context))

        def UpdateServiceAsync(self, serviceID, status, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_UpdateService.invokeAsync(self, ((serviceID, status), context))

        def begin_UpdateService(self, serviceID, status, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_UpdateService.begin(self, ((serviceID, status), _response, _ex, _sent, context))

        def end_UpdateService(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_UpdateService.end(self, _r)

        def FrontProductLicenseUpdate(self, licenseInfo, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontProductLicenseUpdate.invoke(self, ((licenseInfo, ), context))

        def FrontProductLicenseUpdateAsync(self, licenseInfo, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontProductLicenseUpdate.invokeAsync(self, ((licenseInfo, ), context))

        def begin_FrontProductLicenseUpdate(self, licenseInfo, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontProductLicenseUpdate.begin(self, ((licenseInfo, ), _response, _ex, _sent, context))

        def end_FrontProductLicenseUpdate(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_FrontProductLicenseUpdate.end(self, _r)

        def GetAppSrvByFactor(self, appid, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAppSrvByFactor.invoke(self, ((appid, ), context))

        def GetAppSrvByFactorAsync(self, appid, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAppSrvByFactor.invokeAsync(self, ((appid, ), context))

        def begin_GetAppSrvByFactor(self, appid, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAppSrvByFactor.begin(self, ((appid, ), _response, _ex, _sent, context))

        def end_GetAppSrvByFactor(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAppSrvByFactor.end(self, _r)

        def UpdateFileServiceId(self, did, fsrvid, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_UpdateFileServiceId.invoke(self, ((did, fsrvid), context))

        def UpdateFileServiceIdAsync(self, did, fsrvid, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_UpdateFileServiceId.invokeAsync(self, ((did, fsrvid), context))

        def begin_UpdateFileServiceId(self, did, fsrvid, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_UpdateFileServiceId.begin(self, ((did, fsrvid), _response, _ex, _sent, context))

        def end_UpdateFileServiceId(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_UpdateFileServiceId.end(self, _r)

        def DistributePhoneGw(self, requestModel, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DistributePhoneGw.invoke(self, ((requestModel, ), context))

        def DistributePhoneGwAsync(self, requestModel, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DistributePhoneGw.invokeAsync(self, ((requestModel, ), context))

        def begin_DistributePhoneGw(self, requestModel, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DistributePhoneGw.begin(self, ((requestModel, ), _response, _ex, _sent, context))

        def end_DistributePhoneGw(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_DistributePhoneGw.end(self, _r)

        def GetAllH323GwInfo(self, roomId, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAllH323GwInfo.invoke(self, ((roomId, ), context))

        def GetAllH323GwInfoAsync(self, roomId, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAllH323GwInfo.invokeAsync(self, ((roomId, ), context))

        def begin_GetAllH323GwInfo(self, roomId, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAllH323GwInfo.begin(self, ((roomId, ), _response, _ex, _sent, context))

        def end_GetAllH323GwInfo(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetAllH323GwInfo.end(self, _r)

        def GetGwStatusList(self, companyId, numbers, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetGwStatusList.invoke(self, ((companyId, numbers), context))

        def GetGwStatusListAsync(self, companyId, numbers, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetGwStatusList.invokeAsync(self, ((companyId, numbers), context))

        def begin_GetGwStatusList(self, companyId, numbers, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetGwStatusList.begin(self, ((companyId, numbers), _response, _ex, _sent, context))

        def end_GetGwStatusList(self, _r):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceService._op_GetGwStatusList.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceServicePrx.ice_checkedCast(proxy, '::com::fastonz::fmserver::deviceMgr::DeviceService', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_com.fastonz.fmserver.deviceMgr.DeviceServicePrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::com::fastonz::fmserver::deviceMgr::DeviceService'
    _M_com.fastonz.fmserver.deviceMgr._t_DeviceServicePrx = IcePy.defineProxy('::com::fastonz::fmserver::deviceMgr::DeviceService', DeviceServicePrx)

    _M_com.fastonz.fmserver.deviceMgr.DeviceServicePrx = DeviceServicePrx
    del DeviceServicePrx

    _M_com.fastonz.fmserver.deviceMgr.DeviceService = Ice.createTempClass()
    class DeviceService(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::com::fastonz::fmserver::deviceMgr::DeviceService')

        def ice_id(self, current=None):
            return '::com::fastonz::fmserver::deviceMgr::DeviceService'

        @staticmethod
        def ice_staticId():
            return '::com::fastonz::fmserver::deviceMgr::DeviceService'

        def GetAllPhoneGwInfo(self, userID, serviceAppID, current=None):
            raise NotImplementedError("servant method 'GetAllPhoneGwInfo' not implemented")

        def DevRegister(self, requestModel, current=None):
            raise NotImplementedError("servant method 'DevRegister' not implemented")

        def FrontNodeRegister(self, nodeID, nodeCheckCode, subNodeAddr, current=None):
            raise NotImplementedError("servant method 'FrontNodeRegister' not implemented")

        def CheckDevList(self, current=None):
            raise NotImplementedError("servant method 'CheckDevList' not implemented")

        def FrontStart(self, nodeAddr, current=None):
            raise NotImplementedError("servant method 'FrontStart' not implemented")

        def RegisterService(self, deviceID, srvAppID, srvName, srvAddr, current=None):
            raise NotImplementedError("servant method 'RegisterService' not implemented")

        def DevUnRegister(self, deviceID, verifyCode, current=None):
            raise NotImplementedError("servant method 'DevUnRegister' not implemented")

        def DevUpdate(self, requestModel, current=None):
            raise NotImplementedError("servant method 'DevUpdate' not implemented")

        def FrontNodeUnregister(self, status, nodeID, current=None):
            raise NotImplementedError("servant method 'FrontNodeUnregister' not implemented")

        def GetAppSrvList(self, appID, current=None):
            raise NotImplementedError("servant method 'GetAppSrvList' not implemented")

        def GetDevFileList(self, deviceID, current=None):
            raise NotImplementedError("servant method 'GetDevFileList' not implemented")

        def GetDevVerifyCode(self, devID, current=None):
            raise NotImplementedError("servant method 'GetDevVerifyCode' not implemented")

        def GetNodeList(self, current=None):
            raise NotImplementedError("servant method 'GetNodeList' not implemented")

        def GetSubNodeList(self, parentNodeID, current=None):
            raise NotImplementedError("servant method 'GetSubNodeList' not implemented")

        def ServiceUnregister(self, serviceID, current=None):
            raise NotImplementedError("servant method 'ServiceUnregister' not implemented")

        def SetNodeStatus(self, status, nodeID, current=None):
            raise NotImplementedError("servant method 'SetNodeStatus' not implemented")

        def StartLocalNode(self, nodeMainAddr, nodeID, current=None):
            raise NotImplementedError("servant method 'StartLocalNode' not implemented")

        def StopLocalNode(self, nodeID, current=None):
            raise NotImplementedError("servant method 'StopLocalNode' not implemented")

        def FrontGetParentNodeInfo(self, nodeID, current=None):
            raise NotImplementedError("servant method 'FrontGetParentNodeInfo' not implemented")

        def GetServiceList(self, devID, current=None):
            raise NotImplementedError("servant method 'GetServiceList' not implemented")

        def UpdateService(self, serviceID, status, current=None):
            raise NotImplementedError("servant method 'UpdateService' not implemented")

        def FrontProductLicenseUpdate(self, licenseInfo, current=None):
            raise NotImplementedError("servant method 'FrontProductLicenseUpdate' not implemented")

        def GetAppSrvByFactor(self, appid, current=None):
            raise NotImplementedError("servant method 'GetAppSrvByFactor' not implemented")

        def UpdateFileServiceId(self, did, fsrvid, current=None):
            raise NotImplementedError("servant method 'UpdateFileServiceId' not implemented")

        def DistributePhoneGw(self, requestModel, current=None):
            raise NotImplementedError("servant method 'DistributePhoneGw' not implemented")

        def GetAllH323GwInfo(self, roomId, current=None):
            raise NotImplementedError("servant method 'GetAllH323GwInfo' not implemented")

        def GetGwStatusList(self, companyId, numbers, current=None):
            raise NotImplementedError("servant method 'GetGwStatusList' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmserver.deviceMgr._t_DeviceServiceDisp)

        __repr__ = __str__

    _M_com.fastonz.fmserver.deviceMgr._t_DeviceServiceDisp = IcePy.defineClass('::com::fastonz::fmserver::deviceMgr::DeviceService', DeviceService, (), None, ())
    DeviceService._ice_type = _M_com.fastonz.fmserver.deviceMgr._t_DeviceServiceDisp

    DeviceService._op_GetAllPhoneGwInfo = IcePy.Operation('GetAllPhoneGwInfo', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0), ((), IcePy._t_int, False, 0)), (((), _M_com.fastonz.fmserver.deviceMgr._t_PhoneGatewayList, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_DevRegister = IcePy.Operation('DevRegister', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), _M_com.fastonz.fmserver.model._t_DevRegisterRequestModel, False, 0),), (((), _M_com.fastonz.fmserver.model._t_DevRegisterResponseModel, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_FrontNodeRegister = IcePy.Operation('FrontNodeRegister', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (((), IcePy._t_int, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_CheckDevList = IcePy.Operation('CheckDevList', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (), (((), _M_com.fastonz.fmserver.deviceMgr._t_DeviceList, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_FrontStart = IcePy.Operation('FrontStart', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0),), (((), _M_com.fastonz.fmserver.model._t_FrontStartModel, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_RegisterService = IcePy.Operation('RegisterService', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_int, False, 0), ((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (((), _M_com.fastonz.fmserver.model._t_RegisterServiceModel, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_DevUnRegister = IcePy.Operation('DevUnRegister', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_DevUpdate = IcePy.Operation('DevUpdate', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), _M_com.fastonz.fmserver.model._t_UpdateDeviceModel, False, 0),), (), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_FrontNodeUnregister = IcePy.Operation('FrontNodeUnregister', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0), ((), IcePy._t_string, False, 0)), (), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_GetAppSrvList = IcePy.Operation('GetAppSrvList', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0),), (((), _M_com.fastonz.fmserver.deviceMgr._t_AppServiceList, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_GetDevFileList = IcePy.Operation('GetDevFileList', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0),), (((), _M_com.fastonz.fmserver.deviceMgr._t_DevFileList, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_GetDevVerifyCode = IcePy.Operation('GetDevVerifyCode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0),), (((), _M_com.fastonz.fmserver.model._t_DevVerifyCodeModel, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_GetNodeList = IcePy.Operation('GetNodeList', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (), (((), _M_com.fastonz.fmserver.deviceMgr._t_NodeList, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_GetSubNodeList = IcePy.Operation('GetSubNodeList', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0),), (((), _M_com.fastonz.fmserver.deviceMgr._t_SubNodeList, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_ServiceUnregister = IcePy.Operation('ServiceUnregister', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0),), (), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_SetNodeStatus = IcePy.Operation('SetNodeStatus', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0), ((), IcePy._t_int, False, 0)), (), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_StartLocalNode = IcePy.Operation('StartLocalNode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_int, False, 0)), (), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_StopLocalNode = IcePy.Operation('StopLocalNode', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0),), (), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_FrontGetParentNodeInfo = IcePy.Operation('FrontGetParentNodeInfo', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0),), (((), _M_com.fastonz.fmserver.model._t_ParentNodeModel, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_GetServiceList = IcePy.Operation('GetServiceList', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0),), (((), _M_com.fastonz.fmserver.deviceMgr._t_ServiceList, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_UpdateService = IcePy.Operation('UpdateService', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0), ((), IcePy._t_string, False, 0)), (), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_FrontProductLicenseUpdate = IcePy.Operation('FrontProductLicenseUpdate', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), _M_com.fastonz.fmserver.model._t_LicenseModel, False, 0),), (((), IcePy._t_int, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_GetAppSrvByFactor = IcePy.Operation('GetAppSrvByFactor', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0),), (((), _M_com.fastonz.fmserver.deviceMgr._t_AppServiceBandwidthList, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_UpdateFileServiceId = IcePy.Operation('UpdateFileServiceId', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_int, False, 0)), (((), IcePy._t_int, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_DistributePhoneGw = IcePy.Operation('DistributePhoneGw', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), _M_com.fastonz.fmserver.model._t_DistributePhoneGwRequestModel, False, 0),), (((), _M_com.fastonz.fmserver.model._t_DistributePhoneGwResponseModel, False, 0),), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_GetAllH323GwInfo = IcePy.Operation('GetAllH323GwInfo', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0),), (((), _M_com.fastonz.fmserver.deviceMgr._t_H323GatewayList, False, 0), ((), IcePy._t_string, False, 0)), ((), IcePy._t_int, False, 0), ())
    DeviceService._op_GetGwStatusList = IcePy.Operation('GetGwStatusList', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0), ((), _M_com.fastonz.fmserver.deviceMgr._t_NumberList, False, 0)), (((), _M_com.fastonz.fmserver.deviceMgr._t_GatewayStatusList, False, 0), ((), IcePy._t_string, False, 0)), ((), IcePy._t_int, False, 0), ())

    _M_com.fastonz.fmserver.deviceMgr.DeviceService = DeviceService
    del DeviceService

# End of module com.fastonz.fmserver.deviceMgr

__name__ = 'com.fastonz.fmserver'

# End of module com.fastonz.fmserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
