# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `FileService.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
import RoomDocumentModel_ice
import RootDirModel_ice

# Included module com
_M_com = Ice.openModule('com')

# Included module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')

# Included module com.fastonz.fmserver
_M_com.fastonz.fmserver = Ice.openModule('com.fastonz.fmserver')

# Included module com.fastonz.fmserver.model
_M_com.fastonz.fmserver.model = Ice.openModule('com.fastonz.fmserver.model')

# Start of module com
__name__ = 'com'

# Start of module com.fastonz
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmserver
__name__ = 'com.fastonz.fmserver'

# Start of module com.fastonz.fmserver.fileMgr
_M_com.fastonz.fmserver.fileMgr = Ice.openModule('com.fastonz.fmserver.fileMgr')
__name__ = 'com.fastonz.fmserver.fileMgr'

if '_t_RootDirList' not in _M_com.fastonz.fmserver.fileMgr.__dict__:
    _M_com.fastonz.fmserver.fileMgr._t_RootDirList = IcePy.defineSequence('::com::fastonz::fmserver::fileMgr::RootDirList', (), _M_com.fastonz.fmserver.model._t_RootDirModel)

if '_t_RoomDocList' not in _M_com.fastonz.fmserver.fileMgr.__dict__:
    _M_com.fastonz.fmserver.fileMgr._t_RoomDocList = IcePy.defineSequence('::com::fastonz::fmserver::fileMgr::RoomDocList', (), _M_com.fastonz.fmserver.model._t_RoomDocumentModel)

_M_com.fastonz.fmserver.fileMgr._t_FileService = IcePy.defineValue('::com::fastonz::fmserver::fileMgr::FileService', Ice.Value, -1, (), False, True, None, ())

if 'FileServicePrx' not in _M_com.fastonz.fmserver.fileMgr.__dict__:
    _M_com.fastonz.fmserver.fileMgr.FileServicePrx = Ice.createTempClass()
    class FileServicePrx(Ice.ObjectPrx):

        def DelDir(self, parentID, roomID, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_DelDir.invoke(self, ((parentID, roomID), context))

        def DelDirAsync(self, parentID, roomID, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_DelDir.invokeAsync(self, ((parentID, roomID), context))

        def begin_DelDir(self, parentID, roomID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_DelDir.begin(self, ((parentID, roomID), _response, _ex, _sent, context))

        def end_DelDir(self, _r):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_DelDir.end(self, _r)

        def MoveDocFile(self, roomID, docID, parentID, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_MoveDocFile.invoke(self, ((roomID, docID, parentID), context))

        def MoveDocFileAsync(self, roomID, docID, parentID, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_MoveDocFile.invokeAsync(self, ((roomID, docID, parentID), context))

        def begin_MoveDocFile(self, roomID, docID, parentID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_MoveDocFile.begin(self, ((roomID, docID, parentID), _response, _ex, _sent, context))

        def end_MoveDocFile(self, _r):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_MoveDocFile.end(self, _r)

        def AddDir(self, requestModel, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_AddDir.invoke(self, ((requestModel, ), context))

        def AddDirAsync(self, requestModel, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_AddDir.invokeAsync(self, ((requestModel, ), context))

        def begin_AddDir(self, requestModel, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_AddDir.begin(self, ((requestModel, ), _response, _ex, _sent, context))

        def end_AddDir(self, _r):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_AddDir.end(self, _r)

        def AddFile(self, requestModel, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_AddFile.invoke(self, ((requestModel, ), context))

        def AddFileAsync(self, requestModel, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_AddFile.invokeAsync(self, ((requestModel, ), context))

        def begin_AddFile(self, requestModel, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_AddFile.begin(self, ((requestModel, ), _response, _ex, _sent, context))

        def end_AddFile(self, _r):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_AddFile.end(self, _r)

        def DelFile(self, docID, roomID, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_DelFile.invoke(self, ((docID, roomID), context))

        def DelFileAsync(self, docID, roomID, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_DelFile.invokeAsync(self, ((docID, roomID), context))

        def begin_DelFile(self, docID, roomID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_DelFile.begin(self, ((docID, roomID), _response, _ex, _sent, context))

        def end_DelFile(self, _r):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_DelFile.end(self, _r)

        def GetRootDirList(self, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_GetRootDirList.invoke(self, ((), context))

        def GetRootDirListAsync(self, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_GetRootDirList.invokeAsync(self, ((), context))

        def begin_GetRootDirList(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_GetRootDirList.begin(self, ((), _response, _ex, _sent, context))

        def end_GetRootDirList(self, _r):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_GetRootDirList.end(self, _r)

        def RenameFile(self, docName, docID, roomID, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_RenameFile.invoke(self, ((docName, docID, roomID), context))

        def RenameFileAsync(self, docName, docID, roomID, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_RenameFile.invokeAsync(self, ((docName, docID, roomID), context))

        def begin_RenameFile(self, docName, docID, roomID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_RenameFile.begin(self, ((docName, docID, roomID), _response, _ex, _sent, context))

        def end_RenameFile(self, _r):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_RenameFile.end(self, _r)

        def GetRoomFileList(self, roomID, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_GetRoomFileList.invoke(self, ((roomID, ), context))

        def GetRoomFileListAsync(self, roomID, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_GetRoomFileList.invokeAsync(self, ((roomID, ), context))

        def begin_GetRoomFileList(self, roomID, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_GetRoomFileList.begin(self, ((roomID, ), _response, _ex, _sent, context))

        def end_GetRoomFileList(self, _r):
            return _M_com.fastonz.fmserver.fileMgr.FileService._op_GetRoomFileList.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_com.fastonz.fmserver.fileMgr.FileServicePrx.ice_checkedCast(proxy, '::com::fastonz::fmserver::fileMgr::FileService', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_com.fastonz.fmserver.fileMgr.FileServicePrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::com::fastonz::fmserver::fileMgr::FileService'
    _M_com.fastonz.fmserver.fileMgr._t_FileServicePrx = IcePy.defineProxy('::com::fastonz::fmserver::fileMgr::FileService', FileServicePrx)

    _M_com.fastonz.fmserver.fileMgr.FileServicePrx = FileServicePrx
    del FileServicePrx

    _M_com.fastonz.fmserver.fileMgr.FileService = Ice.createTempClass()
    class FileService(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::com::fastonz::fmserver::fileMgr::FileService')

        def ice_id(self, current=None):
            return '::com::fastonz::fmserver::fileMgr::FileService'

        @staticmethod
        def ice_staticId():
            return '::com::fastonz::fmserver::fileMgr::FileService'

        def DelDir(self, parentID, roomID, current=None):
            raise NotImplementedError("servant method 'DelDir' not implemented")

        def MoveDocFile(self, roomID, docID, parentID, current=None):
            raise NotImplementedError("servant method 'MoveDocFile' not implemented")

        def AddDir(self, requestModel, current=None):
            raise NotImplementedError("servant method 'AddDir' not implemented")

        def AddFile(self, requestModel, current=None):
            raise NotImplementedError("servant method 'AddFile' not implemented")

        def DelFile(self, docID, roomID, current=None):
            raise NotImplementedError("servant method 'DelFile' not implemented")

        def GetRootDirList(self, current=None):
            raise NotImplementedError("servant method 'GetRootDirList' not implemented")

        def RenameFile(self, docName, docID, roomID, current=None):
            raise NotImplementedError("servant method 'RenameFile' not implemented")

        def GetRoomFileList(self, roomID, current=None):
            raise NotImplementedError("servant method 'GetRoomFileList' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmserver.fileMgr._t_FileServiceDisp)

        __repr__ = __str__

    _M_com.fastonz.fmserver.fileMgr._t_FileServiceDisp = IcePy.defineClass('::com::fastonz::fmserver::fileMgr::FileService', FileService, (), None, ())
    FileService._ice_type = _M_com.fastonz.fmserver.fileMgr._t_FileServiceDisp

    FileService._op_DelDir = IcePy.Operation('DelDir', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_int, False, 0)), (), ((), IcePy._t_int, False, 0), ())
    FileService._op_MoveDocFile = IcePy.Operation('MoveDocFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0), ((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (((), IcePy._t_int, False, 0),), ((), IcePy._t_int, False, 0), ())
    FileService._op_AddDir = IcePy.Operation('AddDir', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), _M_com.fastonz.fmserver.model._t_RoomDocumentModel, False, 0),), (), ((), IcePy._t_int, False, 0), ())
    FileService._op_AddFile = IcePy.Operation('AddFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), _M_com.fastonz.fmserver.model._t_RoomDocumentModel, False, 0),), (), ((), IcePy._t_int, False, 0), ())
    FileService._op_DelFile = IcePy.Operation('DelFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_int, False, 0)), (), ((), IcePy._t_int, False, 0), ())
    FileService._op_GetRootDirList = IcePy.Operation('GetRootDirList', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (), (((), _M_com.fastonz.fmserver.fileMgr._t_RootDirList, False, 0),), ((), IcePy._t_int, False, 0), ())
    FileService._op_RenameFile = IcePy.Operation('RenameFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0), ((), IcePy._t_int, False, 0)), (), ((), IcePy._t_int, False, 0), ())
    FileService._op_GetRoomFileList = IcePy.Operation('GetRoomFileList', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_int, False, 0),), (((), _M_com.fastonz.fmserver.fileMgr._t_RoomDocList, False, 0),), ((), IcePy._t_int, False, 0), ())

    _M_com.fastonz.fmserver.fileMgr.FileService = FileService
    del FileService

# End of module com.fastonz.fmserver.fileMgr

__name__ = 'com.fastonz.fmserver'

# End of module com.fastonz.fmserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
