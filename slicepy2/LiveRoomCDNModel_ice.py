# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `LiveRoomCDNModel.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')
__name__ = 'com.fastonz'

# Start of module com.fastonz.live
_M_com.fastonz.live = Ice.openModule('com.fastonz.live')
__name__ = 'com.fastonz.live'

# Start of module com.fastonz.live.sliceprotocol
_M_com.fastonz.live.sliceprotocol = Ice.openModule('com.fastonz.live.sliceprotocol')
__name__ = 'com.fastonz.live.sliceprotocol'

# Start of module com.fastonz.live.sliceprotocol.model
_M_com.fastonz.live.sliceprotocol.model = Ice.openModule('com.fastonz.live.sliceprotocol.model')
__name__ = 'com.fastonz.live.sliceprotocol.model'

if 'LiveRoomCDNModel' not in _M_com.fastonz.live.sliceprotocol.model.__dict__:
    _M_com.fastonz.live.sliceprotocol.model.LiveRoomCDNModel = Ice.createTempClass()
    class LiveRoomCDNModel(object):
        def __init__(self, liveRoomId=0, code='', level=0, videoConfig='', expiryTime=0, desc='', type=0, isp=''):
            self.liveRoomId = liveRoomId
            self.code = code
            self.level = level
            self.videoConfig = videoConfig
            self.expiryTime = expiryTime
            self.desc = desc
            self.type = type
            self.isp = isp

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.liveRoomId)
            _h = 5 * _h + Ice.getHash(self.code)
            _h = 5 * _h + Ice.getHash(self.level)
            _h = 5 * _h + Ice.getHash(self.videoConfig)
            _h = 5 * _h + Ice.getHash(self.expiryTime)
            _h = 5 * _h + Ice.getHash(self.desc)
            _h = 5 * _h + Ice.getHash(self.type)
            _h = 5 * _h + Ice.getHash(self.isp)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.fastonz.live.sliceprotocol.model.LiveRoomCDNModel):
                return NotImplemented
            else:
                if self.liveRoomId is None or other.liveRoomId is None:
                    if self.liveRoomId != other.liveRoomId:
                        return (-1 if self.liveRoomId is None else 1)
                else:
                    if self.liveRoomId < other.liveRoomId:
                        return -1
                    elif self.liveRoomId > other.liveRoomId:
                        return 1
                if self.code is None or other.code is None:
                    if self.code != other.code:
                        return (-1 if self.code is None else 1)
                else:
                    if self.code < other.code:
                        return -1
                    elif self.code > other.code:
                        return 1
                if self.level is None or other.level is None:
                    if self.level != other.level:
                        return (-1 if self.level is None else 1)
                else:
                    if self.level < other.level:
                        return -1
                    elif self.level > other.level:
                        return 1
                if self.videoConfig is None or other.videoConfig is None:
                    if self.videoConfig != other.videoConfig:
                        return (-1 if self.videoConfig is None else 1)
                else:
                    if self.videoConfig < other.videoConfig:
                        return -1
                    elif self.videoConfig > other.videoConfig:
                        return 1
                if self.expiryTime is None or other.expiryTime is None:
                    if self.expiryTime != other.expiryTime:
                        return (-1 if self.expiryTime is None else 1)
                else:
                    if self.expiryTime < other.expiryTime:
                        return -1
                    elif self.expiryTime > other.expiryTime:
                        return 1
                if self.desc is None or other.desc is None:
                    if self.desc != other.desc:
                        return (-1 if self.desc is None else 1)
                else:
                    if self.desc < other.desc:
                        return -1
                    elif self.desc > other.desc:
                        return 1
                if self.type is None or other.type is None:
                    if self.type != other.type:
                        return (-1 if self.type is None else 1)
                else:
                    if self.type < other.type:
                        return -1
                    elif self.type > other.type:
                        return 1
                if self.isp is None or other.isp is None:
                    if self.isp != other.isp:
                        return (-1 if self.isp is None else 1)
                else:
                    if self.isp < other.isp:
                        return -1
                    elif self.isp > other.isp:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.live.sliceprotocol.model._t_LiveRoomCDNModel)

        __repr__ = __str__

    _M_com.fastonz.live.sliceprotocol.model._t_LiveRoomCDNModel = IcePy.defineStruct('::com::fastonz::live::sliceprotocol::model::LiveRoomCDNModel', LiveRoomCDNModel, (), (
        ('liveRoomId', (), IcePy._t_int),
        ('code', (), IcePy._t_string),
        ('level', (), IcePy._t_int),
        ('videoConfig', (), IcePy._t_string),
        ('expiryTime', (), IcePy._t_int),
        ('desc', (), IcePy._t_string),
        ('type', (), IcePy._t_int),
        ('isp', (), IcePy._t_string)
    ))

    _M_com.fastonz.live.sliceprotocol.model.LiveRoomCDNModel = LiveRoomCDNModel
    del LiveRoomCDNModel

# End of module com.fastonz.live.sliceprotocol.model

__name__ = 'com.fastonz.live.sliceprotocol'

# End of module com.fastonz.live.sliceprotocol

__name__ = 'com.fastonz.live'

# End of module com.fastonz.live

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
