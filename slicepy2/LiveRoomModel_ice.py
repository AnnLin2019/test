# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `LiveRoomModel.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')
__name__ = 'com.fastonz'

# Start of module com.fastonz.live
_M_com.fastonz.live = Ice.openModule('com.fastonz.live')
__name__ = 'com.fastonz.live'

# Start of module com.fastonz.live.sliceprotocol
_M_com.fastonz.live.sliceprotocol = Ice.openModule('com.fastonz.live.sliceprotocol')
__name__ = 'com.fastonz.live.sliceprotocol'

# Start of module com.fastonz.live.sliceprotocol.model
_M_com.fastonz.live.sliceprotocol.model = Ice.openModule('com.fastonz.live.sliceprotocol.model')
__name__ = 'com.fastonz.live.sliceprotocol.model'

if 'LiveRoomModel' not in _M_com.fastonz.live.sliceprotocol.model.__dict__:
    _M_com.fastonz.live.sliceprotocol.model.LiveRoomModel = Ice.createTempClass()
    class LiveRoomModel(object):
        def __init__(self, liveName='', startTime='', endTime='', maxUserCount=0, confRoomID=0, confRoomAddr='', directorID=0, serviceId=0, serviceAttr=''):
            self.liveName = liveName
            self.startTime = startTime
            self.endTime = endTime
            self.maxUserCount = maxUserCount
            self.confRoomID = confRoomID
            self.confRoomAddr = confRoomAddr
            self.directorID = directorID
            self.serviceId = serviceId
            self.serviceAttr = serviceAttr

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.liveName)
            _h = 5 * _h + Ice.getHash(self.startTime)
            _h = 5 * _h + Ice.getHash(self.endTime)
            _h = 5 * _h + Ice.getHash(self.maxUserCount)
            _h = 5 * _h + Ice.getHash(self.confRoomID)
            _h = 5 * _h + Ice.getHash(self.confRoomAddr)
            _h = 5 * _h + Ice.getHash(self.directorID)
            _h = 5 * _h + Ice.getHash(self.serviceId)
            _h = 5 * _h + Ice.getHash(self.serviceAttr)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.fastonz.live.sliceprotocol.model.LiveRoomModel):
                return NotImplemented
            else:
                if self.liveName is None or other.liveName is None:
                    if self.liveName != other.liveName:
                        return (-1 if self.liveName is None else 1)
                else:
                    if self.liveName < other.liveName:
                        return -1
                    elif self.liveName > other.liveName:
                        return 1
                if self.startTime is None or other.startTime is None:
                    if self.startTime != other.startTime:
                        return (-1 if self.startTime is None else 1)
                else:
                    if self.startTime < other.startTime:
                        return -1
                    elif self.startTime > other.startTime:
                        return 1
                if self.endTime is None or other.endTime is None:
                    if self.endTime != other.endTime:
                        return (-1 if self.endTime is None else 1)
                else:
                    if self.endTime < other.endTime:
                        return -1
                    elif self.endTime > other.endTime:
                        return 1
                if self.maxUserCount is None or other.maxUserCount is None:
                    if self.maxUserCount != other.maxUserCount:
                        return (-1 if self.maxUserCount is None else 1)
                else:
                    if self.maxUserCount < other.maxUserCount:
                        return -1
                    elif self.maxUserCount > other.maxUserCount:
                        return 1
                if self.confRoomID is None or other.confRoomID is None:
                    if self.confRoomID != other.confRoomID:
                        return (-1 if self.confRoomID is None else 1)
                else:
                    if self.confRoomID < other.confRoomID:
                        return -1
                    elif self.confRoomID > other.confRoomID:
                        return 1
                if self.confRoomAddr is None or other.confRoomAddr is None:
                    if self.confRoomAddr != other.confRoomAddr:
                        return (-1 if self.confRoomAddr is None else 1)
                else:
                    if self.confRoomAddr < other.confRoomAddr:
                        return -1
                    elif self.confRoomAddr > other.confRoomAddr:
                        return 1
                if self.directorID is None or other.directorID is None:
                    if self.directorID != other.directorID:
                        return (-1 if self.directorID is None else 1)
                else:
                    if self.directorID < other.directorID:
                        return -1
                    elif self.directorID > other.directorID:
                        return 1
                if self.serviceId is None or other.serviceId is None:
                    if self.serviceId != other.serviceId:
                        return (-1 if self.serviceId is None else 1)
                else:
                    if self.serviceId < other.serviceId:
                        return -1
                    elif self.serviceId > other.serviceId:
                        return 1
                if self.serviceAttr is None or other.serviceAttr is None:
                    if self.serviceAttr != other.serviceAttr:
                        return (-1 if self.serviceAttr is None else 1)
                else:
                    if self.serviceAttr < other.serviceAttr:
                        return -1
                    elif self.serviceAttr > other.serviceAttr:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.live.sliceprotocol.model._t_LiveRoomModel)

        __repr__ = __str__

    _M_com.fastonz.live.sliceprotocol.model._t_LiveRoomModel = IcePy.defineStruct('::com::fastonz::live::sliceprotocol::model::LiveRoomModel', LiveRoomModel, (), (
        ('liveName', (), IcePy._t_string),
        ('startTime', (), IcePy._t_string),
        ('endTime', (), IcePy._t_string),
        ('maxUserCount', (), IcePy._t_int),
        ('confRoomID', (), IcePy._t_int),
        ('confRoomAddr', (), IcePy._t_string),
        ('directorID', (), IcePy._t_int),
        ('serviceId', (), IcePy._t_int),
        ('serviceAttr', (), IcePy._t_string)
    ))

    _M_com.fastonz.live.sliceprotocol.model.LiveRoomModel = LiveRoomModel
    del LiveRoomModel

# End of module com.fastonz.live.sliceprotocol.model

__name__ = 'com.fastonz.live.sliceprotocol'

# End of module com.fastonz.live.sliceprotocol

__name__ = 'com.fastonz.live'

# End of module com.fastonz.live

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
