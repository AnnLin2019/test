# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `ProServiceModel2.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmserver
_M_com.fastonz.fmserver = Ice.openModule('com.fastonz.fmserver')
__name__ = 'com.fastonz.fmserver'

# Start of module com.fastonz.fmserver.model
_M_com.fastonz.fmserver.model = Ice.openModule('com.fastonz.fmserver.model')
__name__ = 'com.fastonz.fmserver.model'

if '_t_Used' not in _M_com.fastonz.fmserver.model.__dict__:
    _M_com.fastonz.fmserver.model._t_Used = IcePy.defineSequence('::com::fastonz::fmserver::model::Used', (), IcePy._t_string)

if '_t_Unused' not in _M_com.fastonz.fmserver.model.__dict__:
    _M_com.fastonz.fmserver.model._t_Unused = IcePy.defineSequence('::com::fastonz::fmserver::model::Unused', (), IcePy._t_string)

if '_t_Parameters' not in _M_com.fastonz.fmserver.model.__dict__:
    _M_com.fastonz.fmserver.model._t_Parameters = IcePy.defineDictionary('::com::fastonz::fmserver::model::Parameters', (), IcePy._t_string, IcePy._t_string)

if 'ProServiceModel2' not in _M_com.fastonz.fmserver.model.__dict__:
    _M_com.fastonz.fmserver.model.ProServiceModel2 = Ice.createTempClass()
    class ProServiceModel2(object):
        def __init__(self, result=0, prodServicesName='', usedModules=None, unusedModules=None, params=None):
            self.result = result
            self.prodServicesName = prodServicesName
            self.usedModules = usedModules
            self.unusedModules = unusedModules
            self.params = params

        def __eq__(self, other):
            if other is None:
                return False
            elif not isinstance(other, _M_com.fastonz.fmserver.model.ProServiceModel2):
                return NotImplemented
            else:
                if self.result != other.result:
                    return False
                if self.prodServicesName != other.prodServicesName:
                    return False
                if self.usedModules != other.usedModules:
                    return False
                if self.unusedModules != other.unusedModules:
                    return False
                if self.params != other.params:
                    return False
                return True

        def __ne__(self, other):
            return not self.__eq__(other)

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmserver.model._t_ProServiceModel2)

        __repr__ = __str__

    _M_com.fastonz.fmserver.model._t_ProServiceModel2 = IcePy.defineStruct('::com::fastonz::fmserver::model::ProServiceModel2', ProServiceModel2, (), (
        ('result', (), IcePy._t_int),
        ('prodServicesName', (), IcePy._t_string),
        ('usedModules', (), _M_com.fastonz.fmserver.model._t_Used),
        ('unusedModules', (), _M_com.fastonz.fmserver.model._t_Unused),
        ('params', (), _M_com.fastonz.fmserver.model._t_Parameters)
    ))

    _M_com.fastonz.fmserver.model.ProServiceModel2 = ProServiceModel2
    del ProServiceModel2

# End of module com.fastonz.fmserver.model

__name__ = 'com.fastonz.fmserver'

# End of module com.fastonz.fmserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
