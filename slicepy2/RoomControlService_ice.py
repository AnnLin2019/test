# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `RoomControlService.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
import CloseRoomRequestModel_ice
import CloseRoomResponseModel_ice

# Included module com
_M_com = Ice.openModule('com')

# Included module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')

# Included module com.fastonz.fmconfctlserver
_M_com.fastonz.fmconfctlserver = Ice.openModule('com.fastonz.fmconfctlserver')

# Included module com.fastonz.fmconfctlserver.model
_M_com.fastonz.fmconfctlserver.model = Ice.openModule('com.fastonz.fmconfctlserver.model')

# Start of module com
__name__ = 'com'

# Start of module com.fastonz
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmconfctlserver
__name__ = 'com.fastonz.fmconfctlserver'

# Start of module com.fastonz.fmconfctlserver.roomControl
_M_com.fastonz.fmconfctlserver.roomControl = Ice.openModule('com.fastonz.fmconfctlserver.roomControl')
__name__ = 'com.fastonz.fmconfctlserver.roomControl'

_M_com.fastonz.fmconfctlserver.roomControl._t_RoomControlService = IcePy.defineValue('::com::fastonz::fmconfctlserver::roomControl::RoomControlService', Ice.Value, -1, (), False, True, None, ())

if 'RoomControlServicePrx' not in _M_com.fastonz.fmconfctlserver.roomControl.__dict__:
    _M_com.fastonz.fmconfctlserver.roomControl.RoomControlServicePrx = Ice.createTempClass()
    class RoomControlServicePrx(Ice.ObjectPrx):

        def CloseRoom(self, requestModel, context=None):
            return _M_com.fastonz.fmconfctlserver.roomControl.RoomControlService._op_CloseRoom.invoke(self, ((requestModel, ), context))

        def CloseRoomAsync(self, requestModel, context=None):
            return _M_com.fastonz.fmconfctlserver.roomControl.RoomControlService._op_CloseRoom.invokeAsync(self, ((requestModel, ), context))

        def begin_CloseRoom(self, requestModel, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmconfctlserver.roomControl.RoomControlService._op_CloseRoom.begin(self, ((requestModel, ), _response, _ex, _sent, context))

        def end_CloseRoom(self, _r):
            return _M_com.fastonz.fmconfctlserver.roomControl.RoomControlService._op_CloseRoom.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_com.fastonz.fmconfctlserver.roomControl.RoomControlServicePrx.ice_checkedCast(proxy, '::com::fastonz::fmconfctlserver::roomControl::RoomControlService', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_com.fastonz.fmconfctlserver.roomControl.RoomControlServicePrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::com::fastonz::fmconfctlserver::roomControl::RoomControlService'
    _M_com.fastonz.fmconfctlserver.roomControl._t_RoomControlServicePrx = IcePy.defineProxy('::com::fastonz::fmconfctlserver::roomControl::RoomControlService', RoomControlServicePrx)

    _M_com.fastonz.fmconfctlserver.roomControl.RoomControlServicePrx = RoomControlServicePrx
    del RoomControlServicePrx

    _M_com.fastonz.fmconfctlserver.roomControl.RoomControlService = Ice.createTempClass()
    class RoomControlService(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::com::fastonz::fmconfctlserver::roomControl::RoomControlService')

        def ice_id(self, current=None):
            return '::com::fastonz::fmconfctlserver::roomControl::RoomControlService'

        @staticmethod
        def ice_staticId():
            return '::com::fastonz::fmconfctlserver::roomControl::RoomControlService'

        def CloseRoom(self, requestModel, current=None):
            raise NotImplementedError("servant method 'CloseRoom' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmconfctlserver.roomControl._t_RoomControlServiceDisp)

        __repr__ = __str__

    _M_com.fastonz.fmconfctlserver.roomControl._t_RoomControlServiceDisp = IcePy.defineClass('::com::fastonz::fmconfctlserver::roomControl::RoomControlService', RoomControlService, (), None, ())
    RoomControlService._ice_type = _M_com.fastonz.fmconfctlserver.roomControl._t_RoomControlServiceDisp

    RoomControlService._op_CloseRoom = IcePy.Operation('CloseRoom', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), _M_com.fastonz.fmconfctlserver.model._t_CloseRoomRequestModel, False, 0),), (((), _M_com.fastonz.fmconfctlserver.model._t_CloseRoomResponseModel, False, 0),), ((), IcePy._t_int, False, 0), ())

    _M_com.fastonz.fmconfctlserver.roomControl.RoomControlService = RoomControlService
    del RoomControlService

# End of module com.fastonz.fmconfctlserver.roomControl

__name__ = 'com.fastonz.fmconfctlserver'

# End of module com.fastonz.fmconfctlserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
