# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `RoomCurDevModel.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmserver
_M_com.fastonz.fmserver = Ice.openModule('com.fastonz.fmserver')
__name__ = 'com.fastonz.fmserver'

# Start of module com.fastonz.fmserver.model
_M_com.fastonz.fmserver.model = Ice.openModule('com.fastonz.fmserver.model')
__name__ = 'com.fastonz.fmserver.model'

if 'RoomCurDevModel' not in _M_com.fastonz.fmserver.model.__dict__:
    _M_com.fastonz.fmserver.model.RoomCurDevModel = Ice.createTempClass()
    class RoomCurDevModel(object):
        def __init__(self, onlines=0, maxCount=0, curDevID=''):
            self.onlines = onlines
            self.maxCount = maxCount
            self.curDevID = curDevID

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.onlines)
            _h = 5 * _h + Ice.getHash(self.maxCount)
            _h = 5 * _h + Ice.getHash(self.curDevID)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.fastonz.fmserver.model.RoomCurDevModel):
                return NotImplemented
            else:
                if self.onlines is None or other.onlines is None:
                    if self.onlines != other.onlines:
                        return (-1 if self.onlines is None else 1)
                else:
                    if self.onlines < other.onlines:
                        return -1
                    elif self.onlines > other.onlines:
                        return 1
                if self.maxCount is None or other.maxCount is None:
                    if self.maxCount != other.maxCount:
                        return (-1 if self.maxCount is None else 1)
                else:
                    if self.maxCount < other.maxCount:
                        return -1
                    elif self.maxCount > other.maxCount:
                        return 1
                if self.curDevID is None or other.curDevID is None:
                    if self.curDevID != other.curDevID:
                        return (-1 if self.curDevID is None else 1)
                else:
                    if self.curDevID < other.curDevID:
                        return -1
                    elif self.curDevID > other.curDevID:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmserver.model._t_RoomCurDevModel)

        __repr__ = __str__

    _M_com.fastonz.fmserver.model._t_RoomCurDevModel = IcePy.defineStruct('::com::fastonz::fmserver::model::RoomCurDevModel', RoomCurDevModel, (), (
        ('onlines', (), IcePy._t_int),
        ('maxCount', (), IcePy._t_int),
        ('curDevID', (), IcePy._t_string)
    ))

    _M_com.fastonz.fmserver.model.RoomCurDevModel = RoomCurDevModel
    del RoomCurDevModel

# End of module com.fastonz.fmserver.model

__name__ = 'com.fastonz.fmserver'

# End of module com.fastonz.fmserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
