# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `RoomInviteModel.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmserver
_M_com.fastonz.fmserver = Ice.openModule('com.fastonz.fmserver')
__name__ = 'com.fastonz.fmserver'

# Start of module com.fastonz.fmserver.model
_M_com.fastonz.fmserver.model = Ice.openModule('com.fastonz.fmserver.model')
__name__ = 'com.fastonz.fmserver.model'

if 'RoomInviteModel' not in _M_com.fastonz.fmserver.model.__dict__:
    _M_com.fastonz.fmserver.model.RoomInviteModel = Ice.createTempClass()
    class RoomInviteModel(object):
        def __init__(self, id=0, inviteCode='', userRight=0, role='', roomId=0, expires=0, permanent=False, companyId=0):
            self.id = id
            self.inviteCode = inviteCode
            self.userRight = userRight
            self.role = role
            self.roomId = roomId
            self.expires = expires
            self.permanent = permanent
            self.companyId = companyId

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.id)
            _h = 5 * _h + Ice.getHash(self.inviteCode)
            _h = 5 * _h + Ice.getHash(self.userRight)
            _h = 5 * _h + Ice.getHash(self.role)
            _h = 5 * _h + Ice.getHash(self.roomId)
            _h = 5 * _h + Ice.getHash(self.expires)
            _h = 5 * _h + Ice.getHash(self.permanent)
            _h = 5 * _h + Ice.getHash(self.companyId)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.fastonz.fmserver.model.RoomInviteModel):
                return NotImplemented
            else:
                if self.id is None or other.id is None:
                    if self.id != other.id:
                        return (-1 if self.id is None else 1)
                else:
                    if self.id < other.id:
                        return -1
                    elif self.id > other.id:
                        return 1
                if self.inviteCode is None or other.inviteCode is None:
                    if self.inviteCode != other.inviteCode:
                        return (-1 if self.inviteCode is None else 1)
                else:
                    if self.inviteCode < other.inviteCode:
                        return -1
                    elif self.inviteCode > other.inviteCode:
                        return 1
                if self.userRight is None or other.userRight is None:
                    if self.userRight != other.userRight:
                        return (-1 if self.userRight is None else 1)
                else:
                    if self.userRight < other.userRight:
                        return -1
                    elif self.userRight > other.userRight:
                        return 1
                if self.role is None or other.role is None:
                    if self.role != other.role:
                        return (-1 if self.role is None else 1)
                else:
                    if self.role < other.role:
                        return -1
                    elif self.role > other.role:
                        return 1
                if self.roomId is None or other.roomId is None:
                    if self.roomId != other.roomId:
                        return (-1 if self.roomId is None else 1)
                else:
                    if self.roomId < other.roomId:
                        return -1
                    elif self.roomId > other.roomId:
                        return 1
                if self.expires is None or other.expires is None:
                    if self.expires != other.expires:
                        return (-1 if self.expires is None else 1)
                else:
                    if self.expires < other.expires:
                        return -1
                    elif self.expires > other.expires:
                        return 1
                if self.permanent is None or other.permanent is None:
                    if self.permanent != other.permanent:
                        return (-1 if self.permanent is None else 1)
                else:
                    if self.permanent < other.permanent:
                        return -1
                    elif self.permanent > other.permanent:
                        return 1
                if self.companyId is None or other.companyId is None:
                    if self.companyId != other.companyId:
                        return (-1 if self.companyId is None else 1)
                else:
                    if self.companyId < other.companyId:
                        return -1
                    elif self.companyId > other.companyId:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmserver.model._t_RoomInviteModel)

        __repr__ = __str__

    _M_com.fastonz.fmserver.model._t_RoomInviteModel = IcePy.defineStruct('::com::fastonz::fmserver::model::RoomInviteModel', RoomInviteModel, (), (
        ('id', (), IcePy._t_int),
        ('inviteCode', (), IcePy._t_string),
        ('userRight', (), IcePy._t_int),
        ('role', (), IcePy._t_string),
        ('roomId', (), IcePy._t_int),
        ('expires', (), IcePy._t_long),
        ('permanent', (), IcePy._t_bool),
        ('companyId', (), IcePy._t_int)
    ))

    _M_com.fastonz.fmserver.model.RoomInviteModel = RoomInviteModel
    del RoomInviteModel

# End of module com.fastonz.fmserver.model

__name__ = 'com.fastonz.fmserver'

# End of module com.fastonz.fmserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
