# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `RootDirModel.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmserver
_M_com.fastonz.fmserver = Ice.openModule('com.fastonz.fmserver')
__name__ = 'com.fastonz.fmserver'

# Start of module com.fastonz.fmserver.model
_M_com.fastonz.fmserver.model = Ice.openModule('com.fastonz.fmserver.model')
__name__ = 'com.fastonz.fmserver.model'

if 'RootDirModel' not in _M_com.fastonz.fmserver.model.__dict__:
    _M_com.fastonz.fmserver.model.RootDirModel = Ice.createTempClass()
    class RootDirModel(object):
        def __init__(self, docID='', docName='', docType=0, fileName=''):
            self.docID = docID
            self.docName = docName
            self.docType = docType
            self.fileName = fileName

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.docID)
            _h = 5 * _h + Ice.getHash(self.docName)
            _h = 5 * _h + Ice.getHash(self.docType)
            _h = 5 * _h + Ice.getHash(self.fileName)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.fastonz.fmserver.model.RootDirModel):
                return NotImplemented
            else:
                if self.docID is None or other.docID is None:
                    if self.docID != other.docID:
                        return (-1 if self.docID is None else 1)
                else:
                    if self.docID < other.docID:
                        return -1
                    elif self.docID > other.docID:
                        return 1
                if self.docName is None or other.docName is None:
                    if self.docName != other.docName:
                        return (-1 if self.docName is None else 1)
                else:
                    if self.docName < other.docName:
                        return -1
                    elif self.docName > other.docName:
                        return 1
                if self.docType is None or other.docType is None:
                    if self.docType != other.docType:
                        return (-1 if self.docType is None else 1)
                else:
                    if self.docType < other.docType:
                        return -1
                    elif self.docType > other.docType:
                        return 1
                if self.fileName is None or other.fileName is None:
                    if self.fileName != other.fileName:
                        return (-1 if self.fileName is None else 1)
                else:
                    if self.fileName < other.fileName:
                        return -1
                    elif self.fileName > other.fileName:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmserver.model._t_RootDirModel)

        __repr__ = __str__

    _M_com.fastonz.fmserver.model._t_RootDirModel = IcePy.defineStruct('::com::fastonz::fmserver::model::RootDirModel', RootDirModel, (), (
        ('docID', (), IcePy._t_string),
        ('docName', (), IcePy._t_string),
        ('docType', (), IcePy._t_int),
        ('fileName', (), IcePy._t_string)
    ))

    _M_com.fastonz.fmserver.model.RootDirModel = RootDirModel
    del RootDirModel

# End of module com.fastonz.fmserver.model

__name__ = 'com.fastonz.fmserver'

# End of module com.fastonz.fmserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
