# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `ServiceModel.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmserver
_M_com.fastonz.fmserver = Ice.openModule('com.fastonz.fmserver')
__name__ = 'com.fastonz.fmserver'

# Start of module com.fastonz.fmserver.model
_M_com.fastonz.fmserver.model = Ice.openModule('com.fastonz.fmserver.model')
__name__ = 'com.fastonz.fmserver.model'

if 'ServiceModel' not in _M_com.fastonz.fmserver.model.__dict__:
    _M_com.fastonz.fmserver.model.ServiceModel = Ice.createTempClass()
    class ServiceModel(object):
        def __init__(self, serviceID=0, serviceAppID=0, serviceName='', serviceAddrs='', serviceStatus=''):
            self.serviceID = serviceID
            self.serviceAppID = serviceAppID
            self.serviceName = serviceName
            self.serviceAddrs = serviceAddrs
            self.serviceStatus = serviceStatus

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.serviceID)
            _h = 5 * _h + Ice.getHash(self.serviceAppID)
            _h = 5 * _h + Ice.getHash(self.serviceName)
            _h = 5 * _h + Ice.getHash(self.serviceAddrs)
            _h = 5 * _h + Ice.getHash(self.serviceStatus)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.fastonz.fmserver.model.ServiceModel):
                return NotImplemented
            else:
                if self.serviceID is None or other.serviceID is None:
                    if self.serviceID != other.serviceID:
                        return (-1 if self.serviceID is None else 1)
                else:
                    if self.serviceID < other.serviceID:
                        return -1
                    elif self.serviceID > other.serviceID:
                        return 1
                if self.serviceAppID is None or other.serviceAppID is None:
                    if self.serviceAppID != other.serviceAppID:
                        return (-1 if self.serviceAppID is None else 1)
                else:
                    if self.serviceAppID < other.serviceAppID:
                        return -1
                    elif self.serviceAppID > other.serviceAppID:
                        return 1
                if self.serviceName is None or other.serviceName is None:
                    if self.serviceName != other.serviceName:
                        return (-1 if self.serviceName is None else 1)
                else:
                    if self.serviceName < other.serviceName:
                        return -1
                    elif self.serviceName > other.serviceName:
                        return 1
                if self.serviceAddrs is None or other.serviceAddrs is None:
                    if self.serviceAddrs != other.serviceAddrs:
                        return (-1 if self.serviceAddrs is None else 1)
                else:
                    if self.serviceAddrs < other.serviceAddrs:
                        return -1
                    elif self.serviceAddrs > other.serviceAddrs:
                        return 1
                if self.serviceStatus is None or other.serviceStatus is None:
                    if self.serviceStatus != other.serviceStatus:
                        return (-1 if self.serviceStatus is None else 1)
                else:
                    if self.serviceStatus < other.serviceStatus:
                        return -1
                    elif self.serviceStatus > other.serviceStatus:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmserver.model._t_ServiceModel)

        __repr__ = __str__

    _M_com.fastonz.fmserver.model._t_ServiceModel = IcePy.defineStruct('::com::fastonz::fmserver::model::ServiceModel', ServiceModel, (), (
        ('serviceID', (), IcePy._t_int),
        ('serviceAppID', (), IcePy._t_int),
        ('serviceName', (), IcePy._t_string),
        ('serviceAddrs', (), IcePy._t_string),
        ('serviceStatus', (), IcePy._t_string)
    ))

    _M_com.fastonz.fmserver.model.ServiceModel = ServiceModel
    del ServiceModel

# End of module com.fastonz.fmserver.model

__name__ = 'com.fastonz.fmserver'

# End of module com.fastonz.fmserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
