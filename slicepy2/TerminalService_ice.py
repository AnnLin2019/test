# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `TerminalService.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
import TerminalConnInfoModel_ice
import TerminalRunInfoModel_ice
import VerifyTerminalBindUserRequestModel_ice
import VerifyTerminalBindUserResponseModel_ice

# Included module com
_M_com = Ice.openModule('com')

# Included module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')

# Included module com.fastonz.fmserver
_M_com.fastonz.fmserver = Ice.openModule('com.fastonz.fmserver')

# Included module com.fastonz.fmserver.model
_M_com.fastonz.fmserver.model = Ice.openModule('com.fastonz.fmserver.model')

# Start of module com
__name__ = 'com'

# Start of module com.fastonz
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmserver
__name__ = 'com.fastonz.fmserver'

# Start of module com.fastonz.fmserver.terminalMgr
_M_com.fastonz.fmserver.terminalMgr = Ice.openModule('com.fastonz.fmserver.terminalMgr')
__name__ = 'com.fastonz.fmserver.terminalMgr'

if '_t_TerminalList' not in _M_com.fastonz.fmserver.terminalMgr.__dict__:
    _M_com.fastonz.fmserver.terminalMgr._t_TerminalList = IcePy.defineSequence('::com::fastonz::fmserver::terminalMgr::TerminalList', (), _M_com.fastonz.fmserver.model._t_TerminalConnInfoModel)

_M_com.fastonz.fmserver.terminalMgr._t_TerminalService = IcePy.defineValue('::com::fastonz::fmserver::terminalMgr::TerminalService', Ice.Value, -1, (), False, True, None, ())

if 'TerminalServicePrx' not in _M_com.fastonz.fmserver.terminalMgr.__dict__:
    _M_com.fastonz.fmserver.terminalMgr.TerminalServicePrx = Ice.createTempClass()
    class TerminalServicePrx(Ice.ObjectPrx):

        def FindTerminal(self, findStr, findPswd, context=None):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_FindTerminal.invoke(self, ((findStr, findPswd), context))

        def FindTerminalAsync(self, findStr, findPswd, context=None):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_FindTerminal.invokeAsync(self, ((findStr, findPswd), context))

        def begin_FindTerminal(self, findStr, findPswd, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_FindTerminal.begin(self, ((findStr, findPswd), _response, _ex, _sent, context))

        def end_FindTerminal(self, _r):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_FindTerminal.end(self, _r)

        def UpdateTerminalRunInfo(self, terminalRunInfo, context=None):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_UpdateTerminalRunInfo.invoke(self, ((terminalRunInfo, ), context))

        def UpdateTerminalRunInfoAsync(self, terminalRunInfo, context=None):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_UpdateTerminalRunInfo.invokeAsync(self, ((terminalRunInfo, ), context))

        def begin_UpdateTerminalRunInfo(self, terminalRunInfo, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_UpdateTerminalRunInfo.begin(self, ((terminalRunInfo, ), _response, _ex, _sent, context))

        def end_UpdateTerminalRunInfo(self, _r):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_UpdateTerminalRunInfo.end(self, _r)

        def VerifyTerminalBindUser(self, req, context=None):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_VerifyTerminalBindUser.invoke(self, ((req, ), context))

        def VerifyTerminalBindUserAsync(self, req, context=None):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_VerifyTerminalBindUser.invokeAsync(self, ((req, ), context))

        def begin_VerifyTerminalBindUser(self, req, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_VerifyTerminalBindUser.begin(self, ((req, ), _response, _ex, _sent, context))

        def end_VerifyTerminalBindUser(self, _r):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalService._op_VerifyTerminalBindUser.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalServicePrx.ice_checkedCast(proxy, '::com::fastonz::fmserver::terminalMgr::TerminalService', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_com.fastonz.fmserver.terminalMgr.TerminalServicePrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::com::fastonz::fmserver::terminalMgr::TerminalService'
    _M_com.fastonz.fmserver.terminalMgr._t_TerminalServicePrx = IcePy.defineProxy('::com::fastonz::fmserver::terminalMgr::TerminalService', TerminalServicePrx)

    _M_com.fastonz.fmserver.terminalMgr.TerminalServicePrx = TerminalServicePrx
    del TerminalServicePrx

    _M_com.fastonz.fmserver.terminalMgr.TerminalService = Ice.createTempClass()
    class TerminalService(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::com::fastonz::fmserver::terminalMgr::TerminalService')

        def ice_id(self, current=None):
            return '::com::fastonz::fmserver::terminalMgr::TerminalService'

        @staticmethod
        def ice_staticId():
            return '::com::fastonz::fmserver::terminalMgr::TerminalService'

        def FindTerminal(self, findStr, findPswd, current=None):
            raise NotImplementedError("servant method 'FindTerminal' not implemented")

        def UpdateTerminalRunInfo(self, terminalRunInfo, current=None):
            raise NotImplementedError("servant method 'UpdateTerminalRunInfo' not implemented")

        def VerifyTerminalBindUser(self, req, current=None):
            raise NotImplementedError("servant method 'VerifyTerminalBindUser' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmserver.terminalMgr._t_TerminalServiceDisp)

        __repr__ = __str__

    _M_com.fastonz.fmserver.terminalMgr._t_TerminalServiceDisp = IcePy.defineClass('::com::fastonz::fmserver::terminalMgr::TerminalService', TerminalService, (), None, ())
    TerminalService._ice_type = _M_com.fastonz.fmserver.terminalMgr._t_TerminalServiceDisp

    TerminalService._op_FindTerminal = IcePy.Operation('FindTerminal', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (((), IcePy._t_int, False, 0), ((), _M_com.fastonz.fmserver.terminalMgr._t_TerminalList, False, 0)), ((), IcePy._t_int, False, 0), ())
    TerminalService._op_UpdateTerminalRunInfo = IcePy.Operation('UpdateTerminalRunInfo', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), _M_com.fastonz.fmserver.model._t_TerminalRunInfoModel, False, 0),), (), ((), IcePy._t_int, False, 0), ())
    TerminalService._op_VerifyTerminalBindUser = IcePy.Operation('VerifyTerminalBindUser', Ice.OperationMode.Normal, Ice.OperationMode.Normal, True, None, (), (((), _M_com.fastonz.fmserver.model._t_VerifyTerminalBindUserRequestModel, False, 0),), (((), _M_com.fastonz.fmserver.model._t_VerifyTerminalBindUserResponseModel, False, 0),), ((), IcePy._t_int, False, 0), ())

    _M_com.fastonz.fmserver.terminalMgr.TerminalService = TerminalService
    del TerminalService

# End of module com.fastonz.fmserver.terminalMgr

__name__ = 'com.fastonz.fmserver'

# End of module com.fastonz.fmserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
