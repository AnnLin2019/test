# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `UserInfoRequestModel.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmserver
_M_com.fastonz.fmserver = Ice.openModule('com.fastonz.fmserver')
__name__ = 'com.fastonz.fmserver'

# Start of module com.fastonz.fmserver.model
_M_com.fastonz.fmserver.model = Ice.openModule('com.fastonz.fmserver.model')
__name__ = 'com.fastonz.fmserver.model'

if 'UserInfoRequestModel' not in _M_com.fastonz.fmserver.model.__dict__:
    _M_com.fastonz.fmserver.model.UserInfoRequestModel = Ice.createTempClass()
    class UserInfoRequestModel(object):
        def __init__(self, nickName='', sex=0, tel='', mobile='', email='', userID=0):
            self.nickName = nickName
            self.sex = sex
            self.tel = tel
            self.mobile = mobile
            self.email = email
            self.userID = userID

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.nickName)
            _h = 5 * _h + Ice.getHash(self.sex)
            _h = 5 * _h + Ice.getHash(self.tel)
            _h = 5 * _h + Ice.getHash(self.mobile)
            _h = 5 * _h + Ice.getHash(self.email)
            _h = 5 * _h + Ice.getHash(self.userID)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.fastonz.fmserver.model.UserInfoRequestModel):
                return NotImplemented
            else:
                if self.nickName is None or other.nickName is None:
                    if self.nickName != other.nickName:
                        return (-1 if self.nickName is None else 1)
                else:
                    if self.nickName < other.nickName:
                        return -1
                    elif self.nickName > other.nickName:
                        return 1
                if self.sex is None or other.sex is None:
                    if self.sex != other.sex:
                        return (-1 if self.sex is None else 1)
                else:
                    if self.sex < other.sex:
                        return -1
                    elif self.sex > other.sex:
                        return 1
                if self.tel is None or other.tel is None:
                    if self.tel != other.tel:
                        return (-1 if self.tel is None else 1)
                else:
                    if self.tel < other.tel:
                        return -1
                    elif self.tel > other.tel:
                        return 1
                if self.mobile is None or other.mobile is None:
                    if self.mobile != other.mobile:
                        return (-1 if self.mobile is None else 1)
                else:
                    if self.mobile < other.mobile:
                        return -1
                    elif self.mobile > other.mobile:
                        return 1
                if self.email is None or other.email is None:
                    if self.email != other.email:
                        return (-1 if self.email is None else 1)
                else:
                    if self.email < other.email:
                        return -1
                    elif self.email > other.email:
                        return 1
                if self.userID is None or other.userID is None:
                    if self.userID != other.userID:
                        return (-1 if self.userID is None else 1)
                else:
                    if self.userID < other.userID:
                        return -1
                    elif self.userID > other.userID:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmserver.model._t_UserInfoRequestModel)

        __repr__ = __str__

    _M_com.fastonz.fmserver.model._t_UserInfoRequestModel = IcePy.defineStruct('::com::fastonz::fmserver::model::UserInfoRequestModel', UserInfoRequestModel, (), (
        ('nickName', (), IcePy._t_string),
        ('sex', (), IcePy._t_int),
        ('tel', (), IcePy._t_string),
        ('mobile', (), IcePy._t_string),
        ('email', (), IcePy._t_string),
        ('userID', (), IcePy._t_int)
    ))

    _M_com.fastonz.fmserver.model.UserInfoRequestModel = UserInfoRequestModel
    del UserInfoRequestModel

# End of module com.fastonz.fmserver.model

__name__ = 'com.fastonz.fmserver'

# End of module com.fastonz.fmserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
