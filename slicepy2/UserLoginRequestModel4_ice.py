# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.5
#
# <auto-generated>
#
# Generated from file `UserLoginRequestModel4.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.fastonz
_M_com.fastonz = Ice.openModule('com.fastonz')
__name__ = 'com.fastonz'

# Start of module com.fastonz.fmserver
_M_com.fastonz.fmserver = Ice.openModule('com.fastonz.fmserver')
__name__ = 'com.fastonz.fmserver'

# Start of module com.fastonz.fmserver.model
_M_com.fastonz.fmserver.model = Ice.openModule('com.fastonz.fmserver.model')
__name__ = 'com.fastonz.fmserver.model'

if 'UserLoginRequestModel4' not in _M_com.fastonz.fmserver.model.__dict__:
    _M_com.fastonz.fmserver.model.UserLoginRequestModel4 = Ice.createTempClass()
    class UserLoginRequestModel4(object):
        def __init__(self, serviceID=0, roomID=0, userID=0, userName='', userType=0, terminalType=0, roomPassword='', userIP='', tokenID=''):
            self.serviceID = serviceID
            self.roomID = roomID
            self.userID = userID
            self.userName = userName
            self.userType = userType
            self.terminalType = terminalType
            self.roomPassword = roomPassword
            self.userIP = userIP
            self.tokenID = tokenID

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.serviceID)
            _h = 5 * _h + Ice.getHash(self.roomID)
            _h = 5 * _h + Ice.getHash(self.userID)
            _h = 5 * _h + Ice.getHash(self.userName)
            _h = 5 * _h + Ice.getHash(self.userType)
            _h = 5 * _h + Ice.getHash(self.terminalType)
            _h = 5 * _h + Ice.getHash(self.roomPassword)
            _h = 5 * _h + Ice.getHash(self.userIP)
            _h = 5 * _h + Ice.getHash(self.tokenID)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.fastonz.fmserver.model.UserLoginRequestModel4):
                return NotImplemented
            else:
                if self.serviceID is None or other.serviceID is None:
                    if self.serviceID != other.serviceID:
                        return (-1 if self.serviceID is None else 1)
                else:
                    if self.serviceID < other.serviceID:
                        return -1
                    elif self.serviceID > other.serviceID:
                        return 1
                if self.roomID is None or other.roomID is None:
                    if self.roomID != other.roomID:
                        return (-1 if self.roomID is None else 1)
                else:
                    if self.roomID < other.roomID:
                        return -1
                    elif self.roomID > other.roomID:
                        return 1
                if self.userID is None or other.userID is None:
                    if self.userID != other.userID:
                        return (-1 if self.userID is None else 1)
                else:
                    if self.userID < other.userID:
                        return -1
                    elif self.userID > other.userID:
                        return 1
                if self.userName is None or other.userName is None:
                    if self.userName != other.userName:
                        return (-1 if self.userName is None else 1)
                else:
                    if self.userName < other.userName:
                        return -1
                    elif self.userName > other.userName:
                        return 1
                if self.userType is None or other.userType is None:
                    if self.userType != other.userType:
                        return (-1 if self.userType is None else 1)
                else:
                    if self.userType < other.userType:
                        return -1
                    elif self.userType > other.userType:
                        return 1
                if self.terminalType is None or other.terminalType is None:
                    if self.terminalType != other.terminalType:
                        return (-1 if self.terminalType is None else 1)
                else:
                    if self.terminalType < other.terminalType:
                        return -1
                    elif self.terminalType > other.terminalType:
                        return 1
                if self.roomPassword is None or other.roomPassword is None:
                    if self.roomPassword != other.roomPassword:
                        return (-1 if self.roomPassword is None else 1)
                else:
                    if self.roomPassword < other.roomPassword:
                        return -1
                    elif self.roomPassword > other.roomPassword:
                        return 1
                if self.userIP is None or other.userIP is None:
                    if self.userIP != other.userIP:
                        return (-1 if self.userIP is None else 1)
                else:
                    if self.userIP < other.userIP:
                        return -1
                    elif self.userIP > other.userIP:
                        return 1
                if self.tokenID is None or other.tokenID is None:
                    if self.tokenID != other.tokenID:
                        return (-1 if self.tokenID is None else 1)
                else:
                    if self.tokenID < other.tokenID:
                        return -1
                    elif self.tokenID > other.tokenID:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.fastonz.fmserver.model._t_UserLoginRequestModel4)

        __repr__ = __str__

    _M_com.fastonz.fmserver.model._t_UserLoginRequestModel4 = IcePy.defineStruct('::com::fastonz::fmserver::model::UserLoginRequestModel4', UserLoginRequestModel4, (), (
        ('serviceID', (), IcePy._t_int),
        ('roomID', (), IcePy._t_int),
        ('userID', (), IcePy._t_int),
        ('userName', (), IcePy._t_string),
        ('userType', (), IcePy._t_int),
        ('terminalType', (), IcePy._t_int),
        ('roomPassword', (), IcePy._t_string),
        ('userIP', (), IcePy._t_string),
        ('tokenID', (), IcePy._t_string)
    ))

    _M_com.fastonz.fmserver.model.UserLoginRequestModel4 = UserLoginRequestModel4
    del UserLoginRequestModel4

# End of module com.fastonz.fmserver.model

__name__ = 'com.fastonz.fmserver'

# End of module com.fastonz.fmserver

__name__ = 'com.fastonz'

# End of module com.fastonz

__name__ = 'com'

# End of module com
